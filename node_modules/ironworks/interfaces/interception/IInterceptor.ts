
import IComm = require('../eventing/IComm');
import ICommEvent = require('../eventing/ICommEvent');
import ICommEmit = require('../eventing/ICommEmit');
import IWho = require('../whoIAm/IWho');
import IInterceptedTell = require('./IInterceptedTell');
import IInterceptedInform = require('./IInterceptedInform');
import IInterceptedConfirm = require('./IInterceptedConfirm');
import IInterceptedAsk = require('./IInterceptedAsk');
import IInterceptedRequest = require('./IInterceptedRequest');

interface IInterceptor extends IWho {
    getEvent(): ICommEvent;
    getComm(): IComm;

    intercept(
        emit: ICommEmit,
        eventArgs: any[],
        interception: (stop: boolean, updatedArgs: any[]) => void
    );

    listen(interceptor: IInterceptedTell): IComm;
    info<infoType>(interceptor: IInterceptedInform<infoType>): IComm;
    ack(interceptor: IInterceptedConfirm): IComm;
    answer<answerType>(interceptor: IInterceptedAsk<answerType>): IComm;
    respond<requestType, responseType>(interceptor: IInterceptedRequest<requestType, responseType>): IComm;
}

export = IInterceptor;
